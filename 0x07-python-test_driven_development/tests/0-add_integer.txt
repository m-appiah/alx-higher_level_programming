Test cases for 0-add_integer module


The 0-add_integer module takes two integers or floats as arguments and returns their sum

Usage

Importing function from the module:
	>>> add_integer = __import__('0-add_integer').add_integer

Adding two positive integers
	>>> add_integer(1, 2)
	3

Adding a positive and a negative integers
	>>> add_integer(100, -2)
	98

Adding a positive integer
	>>> add_integer(2)
	100

Adding a positive float and a negative integers
	>>> add_integer(100.3, -2)
	98

Adding a positive and a negative integers
	>>> add_integer(-3, 2)
	-1

Adding two positive integers
	>>> add_integer(3, 2)
	5

Adding two positive float values
	>>> add_integer(3.0, 2.0)
	5

Adding a positive and a negative float values
	>>> add_integer(0.4, 2.0)
	2

Adding two negative float values
	>>> add_integer(-0.4, -2.0)
	-2

Adding two strigs
	>>> add_integer("Hello", "World")
	Traceback (most recent call last):
		...
	TypeError: b must be an integer

Adding a positive integer and a string
	>>> add_integer("Hello", 9)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer


Adding no argument to the function
	>>> add_integer(None)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Adding no argument and a positive integer to the function
	>>> add_integer(None, 3)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Case Overflow:
	>>> add_integer(5, float('inf'))
	Traceback (most recent call last):
		...
	OverflowError: cannot convert float infinity to integer

Case NaN 1:
	>>> add_integer(5, float('nan'))
	Traceback (most recent call last):
		...
	ValueError: cannot convert float NaN to integer

Case NaN 2:
	>>> add_integer(float('None'), float('nan'))
	Traceback (most recent call last):
		...
	ValueError: could not convert string to float: 'None'

Adding no argument
	>>> add_integer(float('None'), 6)
	Traceback (most recent call last):
		...
	ValueError: could not convert string to float: 'None'
