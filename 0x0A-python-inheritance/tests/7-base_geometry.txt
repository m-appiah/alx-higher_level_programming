=============================
Task 7 Test Cases
=============================


>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

::
# Test Case 1

>>> bg = BaseGeometry()
>>> bg.integer_validator(1, 2)
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("height", 12)
>>> bg.integer_validator("width", 12)

::

# Test Case 2

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
  ...
TypeError: name must be an integer

::

# Test Case 3

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
  ...
ValueError: age must be greater than 0

::

# Test Case 4

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
  ...
ValueError: distance must be greater than 0

::

# Area test case

>>> bg.area()
Traceback (most recent call last):
  ...
Exception: area() is not implemented

::

# Test Case 6

>>> bg.integer_validator()
Traceback (most recent call last):
  ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

::

# Test Case 7

>>> bg.integer_validator("age")
Traceback (most recent call last):
  ...
TypeError: integer_validator() missing 1 required positional argument: 'value

::

# Tesr Case 8

>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
  ...
TypeError: age must be an integer

::

# Test Case 9

>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
  ...
TypeError: age must be an integer

::

# Test Case 10

>>> bg.integer_validator("age", True)

::

# Test Case 11

>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
 ...
TypeError: age must be an integer

::

# Test Case 12

>>> bg.integer_validator("age", None)
Traceback (most recent call last):
 ...
TypeError: age must be an integer
